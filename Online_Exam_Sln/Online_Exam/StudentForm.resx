<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>