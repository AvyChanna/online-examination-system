<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>